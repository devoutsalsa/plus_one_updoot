defmodule PlusOneUpdoot.Atom do
  alias PlusOneUpdoot.Counter

  @elements [
    :actinium,
    :aluminum,
    :americium,
    :antimony,
    :argon,
    :arsenic,
    :astatine,
    :barium,
    :berkelium,
    :beryllium,
    :bismuth,
    :bohrium,
    :boron,
    :bromine,
    :cadmium,
    :calcium,
    :californium,
    :carbon,
    :cerium,
    :cesium,
    :chlorine,
    :chromium,
    :cobalt,
    :copper,
    :curium,
    :darmstadtium,
    :dubnium,
    :dysprosium,
    :einsteinium,
    :erbium,
    :europium,
    :fermium,
    :fluorine,
    :francium,
    :gadolinium,
    :gallium,
    :germanium,
    :gold,
    :hafnium,
    :hassium,
    :helium,
    :holmium,
    :hydrogen,
    :indium,
    :iodine,
    :iridium,
    :iron,
    :krypton,
    :lanthanum,
    :lawrencium,
    :lead,
    :lithium,
    :lutetium,
    :magnesium,
    :manganese,
    :meitnerium,
    :mendelevium,
    :mercury,
    :molybdenum,
    :neodymium,
    :neon,
    :neptunium,
    :nickel,
    :niobium,
    :nitrogen,
    :nobelium,
    :oganesson,
    :osmium,
    :oxygen,
    :palladium,
    :phosphorus,
    :platinum,
    :plutonium,
    :polonium,
    :potassium,
    :praseodymium,
    :promethium,
    :protactinium,
    :radium,
    :radon,
    :rhenium,
    :rhodium,
    :roentgenium,
    :rubidium,
    :ruthenium,
    :rutherfordium,
    :samarium,
    :scandium,
    :seaborgium,
    :selenium,
    :silicon,
    :silver,
    :sodium,
    :strontium,
    :sulfur,
    :tantalum,
    :technetium,
    :tellurium,
    :terbium,
    :thallium,
    :thorium,
    :thulium,
    :tin,
    :titanium,
    :tungsten,
    :ununbium,
    :ununhexium,
    :ununpentium,
    :ununquadium,
    :ununseptium,
    :ununtrium,
    :uranium,
    :vanadium,
    :xenon,
    :ytterbium,
    :yttrium,
    :zinc,
    :zirconium
  ]

  Module.register_attribute(__MODULE__, :element, persist: true)

  @element Enum.random(@elements)

  def increment!(arg \\ @element) when is_atom(arg) do
    Counter.increment_atom!(arg)
  end
end
